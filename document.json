{
  "name": "Crunchy Data PostgreSQL Operator",
  "description": "Crunchy Data PostgreSQL Operator",
  "logo": "_images/SalesStack.png",
  "has_supporting_content": false,
  "stack_id": "Crunchy-PostgreSQL-Operator",
  "type": "stack",
  "categories": ["PostgreSQL"],
  "platform": "Kubernetes",
  "cover": "cover.md",
  "meta": {
    "Database": ["PostgreSQL"],
    "Install time": ["5 minutes"]
  },
  "commands": [
    {
      "description": "Create Namespace",
      "exec": "export PGO_OPERATOR_NAMESPACE=pgo && kubectl create namespace pgo"
    },
    {
      "description": "Clone and Prepare ",
      "exec": "git clone -b sample-app https://github.com/operator-playground/postgres-operator && cd postgres-operator && kubectl create -f postgre.yaml && kubectl create -f secret.yaml"
    },
    {
      "description": "Get VM IP ",
      "exec": "export ip_addr=$(ifconfig eth1 | grep inet | awk '{print $2}' | cut -f2 -d:)"
    },
    {
      "description": "Create an Service",
      "exec": "curl -o service.yaml https://raw.githubusercontent.com/operator-playground/postgres-operator/sample-app/service.yaml && kubectl create -f service.yaml -n pgo"
    },
    {
      "description": "Wait for Postgres Operator to spin up ",
      "exec": "until nc -z -v -w30 $ip_addr 32443; do echo \"Waiting for database connection...\"; sleep 5; done;"
    },
    {
      "description": "Install Client Credentials and Download the PGO Binary and Client Certificates",
      "exec": "PGO_CMD=kubectl ./deploy/install-bootstrap-creds.sh && PGO_CMD=kubectl ./installers/kubectl/client-setup.sh"
    },
    {
      "description": "Export PGO data that will be used for Cluster creation",
      "exec": "export PATH=/home/student/.pgo/pgo:$PATH && export PGOUSER=/home/student/.pgo/pgo/pgouser && export PGO_CA_CERT=/home/student/.pgo/pgo/client.crt && export PGO_CLIENT_CERT=/home/student/.pgo/pgo/client.crt && export PGO_CLIENT_KEY=/home/student/.pgo/pgo/client.key"
    }
  ],
  "content": ["Crunchy-PostgreSQL-Operator-tutorial.md"],
  "display": [
    {
      "name": "Developer Dashboard",
      "url": "##DNS.host##/codeserver",
      "enabled": true
    }
  ]
}
